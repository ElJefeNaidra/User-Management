@using SIDPSF.Common
@using Microsoft.AspNetCore.Http
@using Microsoft.AspNetCore.Http.Extensions;
@inject Microsoft.AspNetCore.Http.IHttpContextAccessor HttpContextAccessor
@inject SIDPSF.Common.StringLocalisation.DatabaseResourceLocalisationProvider.ResourceRepository ResourceRepo
@inject Microsoft.Extensions.Caching.Memory.IMemoryCache MemoryCache;


<header id="page-topbar">
    <div class="navbar-header">
        <div class="d-flex">
            <!-- LOGO -->
            <div class="navbar-brand-box">
                <a href="#" class="logo logo-light">
                    <span class="logo-sm">
                        <img src="~/assets/images/logo-light-small.png" alt="" height="22">
                    </span>
                    <span class="logo-lg">
                        <img src="~/assets/images/logo-light.png" alt="" height="35">
                    </span>
                </a>
            </div>

            <button type="button" class="btn btn-sm px-3 font-size-16 header-item waves-effect" id="vertical-menu-btn">
                <i class="fa fa-fw fa-bars"></i>
            </button>
        </div>

        <div class="d-flex">
            @*Language dropdown*@
            <div class="dropdown d-inline-block">
                <button type="button" id="Language-Button" class="btn header-item waves-effect"
                        data-bs-toggle="dropdown" aria-haspopup="true" aria-expanded="false">

                    @if (HttpContextAccessor.HttpContext.Session.GetString("IdLanguage") == null)
                    {
                        <text>SHQIP</text>
                    }
                    else
                    {
                        switch (HttpContextAccessor.HttpContext.Session.GetString("IdLanguage"))
                        {
                            case "1":
                                <text>ENGLISH</text>
                                break;

                            case "2":
                                <text>SHQIP</text>
                                break;

                            case "3":
                                <text>SRPSKI</text>
                                break;

                            default:
                                <text>ENGLISH</text>
                                break;
                        }
                    }
                </button>
                <div class="dropdown-menu dropdown-menu-end">

                    @if (HttpContextAccessor.HttpContext.Session.GetString("IdLanguage") != "1")
                    {
                        <text>
                            <a href="@Url.Action("SetLanguage", "UserLanguage" , new {@IdLanguage = "1", @RawUrl = @Context.Request.GetEncodedUrl()})" class="dropdown-item notify-item language" data-lang="1">
                                <span class="align-middle">ENGLISH</span>
                            </a>
                        </text>
                    }

                    @if (HttpContextAccessor.HttpContext.Session.GetString("IdLanguage") != "2")
                    {
                        <text>
                            <a href="@Url.Action("SetLanguage", "UserLanguage" , new {@IdLanguage = "2", @RawUrl = @Context.Request.GetEncodedUrl()})" class="dropdown-item notify-item language" data-lang="2">
                                <span class="align-middle">SQHIP</span>
                            </a>
                        </text>
                    }

                    @if (HttpContextAccessor.HttpContext.Session.GetString("IdLanguage") != "3")
                    {
                        <text>
                            <a href="@Url.Action("SetLanguage", "UserLanguage" , new {@IdLanguage = "3", @RawUrl = @Context.Request.GetEncodedUrl()})" class="dropdown-item notify-item language" data-lang="3">
                                <span class="align-middle">SRPSKI</span>
                            </a>
                        </text>
                    }
                </div>
            </div>

            <div class="dropdown d-inline-block">
                <button type="button" class="btn header-item waves-effect" id="page-header-user-dropdown"
                        data-bs-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                    <span class="d-none d-xl-inline-block ms-1">@HttpContextAccessor.HttpContext.Session.GetString("UserFirstNameLastName")</span>
                    <i class="mdi mdi-chevron-down d-xl-inline-block"></i>
                </button>
                <div class="dropdown-menu dropdown-menu-end">
                    <!-- item-->
                    <a class="dropdown-item" href="@Url.Action("ReadProfile", "User")"><i class="bx bx-user font-size-16 align-middle me-1"></i> <span>@ResourceRepo.GetResourceByName("ProfileMenuItem")</span></a>
                    <a class="dropdown-item" href="@Url.Action("ChangePassword", "UserChangePassword")"><i class="bx bx-key font-size-16 align-middle me-1"></i> <span>@ResourceRepo.GetResourceByName("ChangePasswordMenuItem")</span></a>
                    <div class="dropdown-divider"></div>
                    <a class="dropdown-item text-danger" href="@Url.Action("LogOut", "UserLogOut")"><i class="bx bx-power-off font-size-16 align-middle me-1 text-danger"></i> <span>@ResourceRepo.GetResourceByName("LogOutMenuItem")</span></a>
                </div>
            </div>
        </div>
    </div>
</header>

<script async="async">

    // Call this function when the page loads to set the sidebar state
    function setSidebarState() {
        const sidebarState = localStorage.getItem('sidebarState');
        if (sidebarState === 'collapsed') {
            $('body').addClass('vertical-collpsed');
        } else {
            $('body').removeClass('vertical-collpsed');
        }
    }

    $(document).ready(function () {
        $('.language').click(function (e) {
            e.preventDefault(); // Prevent the default link behavior

            var languageId = $(this).data('lang');
            var rawUrl = window.location.href; // Get the current URL

            $.ajax({
                url: '/UserLanguage/SetLanguage', // Update the URL based on your routing
                type: 'POST',
                data: { IdLanguage: languageId, RawUrl: rawUrl },
                success: function (response) {
                    window.location.href = rawUrl; // Redirect to the same page to see the changes
                },
                error: function (xhr, status, error) {
                    console.error("Error changing language:", error);
                }
            });
        });


        setSidebarState();
        initLeftMenuCollapse();
    });
</script>